MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=2
PSVERSION_COMP=4
[preset00]

fDecay=0.98
zoom=1.0
rot=0.0
warp=0.0

nWaveMode=7
bAdditiveWaves=0
bWaveDots=1
bWaveThick=1
bMaximizeWaveColor=1

ob_size=0.001
ob_a=0.4
ob_r=1
ob_g=1
ob_b=1

shapecode_0_enabled=1
shapecode_0_sides=8
shapecode_0_x=0.5
shapecode_0_y=0.5
shapecode_0_r=1.0
shapecode_0_g=1.0
shapecode_0_b=1.0
shapecode_0_a=0.05
shapecode_0_rad=2.0
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000

shape_0_per_frame1=rad = 2.0 - mid_att;
shape_0_per_frame2=border_r = border_r + 0.500*( 0.60*sin(0.950*time) + 0.40*sin(1.045*time) );
shape_0_per_frame3=border_g = border_g + 0.500*( 0.60*sin(0.890*time) + 0.40*sin(0.910* time) );
shape_0_per_frame4=border_b = border_b + 0.500*( 0.60*sin(0.940*time) + 0.40*sin(0.980* time) );

shape_0_per_frame5=a = treb/100;
shape_0_per_frame6=r = r + 0.500*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );
shape_0_per_frame7=g = g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );
shape_0_per_frame8=b = b + 0.500*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );


per_frame_1=wave_r = wave_r + 0.500*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );
per_frame_2=wave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );
per_frame_3=wave_b = wave_b + 0.500*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );

per_frame_4=zoom = zoom + 0.010*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );
per_frame_5=rot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );
per_frame_6=decay = decay - 0.01*equal(frame%50,0);
per_frame_7=zoom=zoom+(bass_att-1.0)*0.2;


comp_1=`shader_body
comp_2=`{
comp_3=`    float rad_lq = rad * length(texsize.xy)*0.5;
comp_4=`    float ang_lq = ang;
comp_5=`    float2 uv_temp1 = (uv - 0.5) * texsize.xy;
comp_6=`    float rad_hq = length(uv_temp1);
comp_7=`    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);
comp_8=`
comp_9=`    float2 uv2 = (uv - 0.5);
comp_10=`    float rad2 = rad_lq*0.8;
comp_11=`    float ang2 = ang_lq * M_INV_PI_2;
comp_12=`
comp_13=`        // ROTATION OVER TIME
comp_14=`        #if 1
comp_15=`          ang2 += time*0.025;   //rotate over time
comp_16=`        #endif
comp_17=`
comp_18=`        // FIN TYPE
comp_19=`        float fins = 3 + floor(rand_preset.z*5.95);
comp_20=`        #if 1     // SHARP FINS
comp_21=`          ang2 = frac(ang2*fins)/fins;
comp_22=`              // ENABLE THIS TO MAKE THE FINS ALTERNATE: (seamless!)
comp_23=`              ang2 = abs(ang2 - 0.5/fins);
comp_24=`        #else     // COSINE FINS - a bit slow
comp_25=`          ang2 = cos(ang2*M_PI_2*fins) * 0.023;
comp_26=`        #endif
comp_27=`
comp_28=`        // RADIAL KALEIDOSCOPING?
comp_29=`        #if 0
comp_30=`          rad2 *= g_fTexSize.z;
comp_31=`            // choose one:
comp_32=`            rad2 = lerp(rad2, frac(rad2*3)/3.0, 0.5);
comp_33=`            //rad2 = cos(rad2*5);
comp_34=`            //rad2 = sqrt(rad2)*0.5;
comp_35=`            //rad2 += abs(frac(rad2*7)-0.5)/7.0 * 1.15;  // stepifier
comp_36=`            //rad2 += cos(rad2*61)*0.02;
comp_37=`          rad2 *= g_fTexSize.x;
comp_38=`        #endif
comp_39=`
comp_40=`    ang2 *= M_PI_2;
comp_41=`    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;
comp_42=`
comp_43=`    ret = tex2D(sampler_main, uv2).xyz;
comp_44=`    ret *= 1.333; // a little bit of overbright
comp_45=`}


